-- BOOK

-- Book Title: "Roblox Lua Scripting Basics"
-- Author: Your Name

--[[ 
    Chapter 1: Introduction to Variables
    In Lua, variables are used to store data. You can think of a variable as a container 
    that holds a piece of information that you can use or change throughout your program.

    Variables can store different types of data:
    - Numbers: To store numerical values.
    - Strings: To store text.
    - Booleans: To store true/false values.

    Example:
    local score = 0  -- This declares a variable named 'score' and sets it to 0.
    local playerName = "John"  -- This declares a variable named 'playerName' and sets it to the string "John".
    local isAlive = true  -- This declares a variable named 'isAlive' and sets it to true.
]]

--[[ 
    Chapter 2: Functions
    Functions in Lua are reusable blocks of code that perform a specific task. 
    You define a function once, and then you can call it whenever you need it.

    Example:
    function greetPlayer()  -- This defines a function called 'greetPlayer'.
        print("Welcome to the game!")  -- This code will print the greeting message.
    end
    
    You can call this function like this:
    greetPlayer()  -- This will execute the function and print the greeting.
]]

--[[ 
    Chapter 3: If Statements
    An if statement is used to make decisions in your code. It checks if a condition is true, 
    and if it is, it runs a block of code. If the condition is false, it skips that block.

    Example:
    if playerScore >= 10 then  -- This checks if the player's score is greater than or equal to 10.
        print("Congratulations!")  -- This code will run if the condition is true.
    else
        print("Try again!")  -- This code will run if the condition is false.
    end
]]

--[[ 
    Chapter 4: Loops
    Loops allow you to repeat a block of code multiple times without writing it over and over.
    
    A 'for' loop is typically used when you know the exact number of times you want to repeat something.
    Example:
    for i = 1, 5 do  -- This loop will run 5 times, starting from 1 and ending at 5.
        print("Loop iteration: " .. i)  -- This will print the current value of 'i' during each iteration.
    end
    
    A 'while' loop keeps running as long as a condition is true.
    Example:
    while isPlayerAlive do  -- This loop will continue as long as 'isPlayerAlive' is true.
        print("Player is alive!")  -- This code will keep running.
    end
]]

--[[ 
    Chapter 5: Event Handling
    In Roblox, events allow you to trigger actions when something happens in the game.
    For example, when a player clicks a button or touches an object, an event can be triggered.

    You can connect a function to an event so that when the event occurs, the function runs.
    
    Example:
    part.Touched:Connect(function()  -- This connects a function to the 'Touched' event of a part.
        print("The part was touched!")  -- This will print a message when the part is touched.
    end)
]]

--[[ 
    Chapter 6: Conclusion
    In this book, we've covered the basics of Lua scripting in Roblox. Here's a recap of what we've learned:
    - Variables: Store data like numbers, strings, and booleans.
    - Functions: Reusable blocks of code that perform specific tasks.
    - If Statements: Make decisions based on conditions.
    - Loops: Repeat code multiple times.
    - Event Handling: Trigger actions when specific events occur.











































































































































































































https://raw.githubusercontent.com/ZirhyOG/BoostScript/refs/heads/main/LogINF2
